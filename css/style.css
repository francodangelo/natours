/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* Reset default values put by browsers to start clean */
* { /* universal selector */
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
/* Project wide font definitions */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}
/* Header class */
.header {
    height: 95vh; /* at any point in time, the height of this element has to be 95% of the viewport */
    background-image:
                    linear-gradient(
                        to right bottom,
                        rgb(126, 213, 111, 0.8), 
                        rgb(40, 180, 133, 0.8)), 
                    url(../img/hero.jpg);
    background-size: cover; /* whatever the width of the viewport, it will always try to fit the element inside the box */
    background-position: top; /* set image to top of the container no matter how the viewport shifts */
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 87vh, 50% 100%, 0 87vh); 
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px; /* these 40px start counting from the parent element that has position set to relative (in this case header) */
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%); /* now the %s are no longer in relation to a parent element, but to the element itself */
    
    text-align: center;
}

/* Style the headings */
.heading-primary {
    color: #fff;
    text-transform: uppercase;

    backface-visibility: hidden; /* determines if the part behind the element remains hidden or visible */
    margin-bottom: 60px;
    margin-left: auto;
    margin-right: auto;
}

.heading-primary-main {
    display: block; /* use block element to stack the headings */
    font-size: 60px;
    font-weight: 400;

    letter-spacing: 35px;
    direction:rtl;
    text-indent:-35px; /* counteract letter-spacing for last character */

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;

    letter-spacing: 17px;
    direction:rtl;
    text-indent:-17px;

    /* shorten property */
    animation: moveInRight 1s ease-out;
}
/* Add animations */
@keyframes moveInLeft {
    0% { /* the start */
        opacity: 0;
        transform: translateX(-100px); /* goes 100 px to the left of the x-axis */
    }
    
    80% {
        transform: translateX(10px);
    }

    100% { /* the end */
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% { /* the start */
        opacity: 0;
        transform: translateX(100px); /* goes 100 px to the right of the x-axis */
    }
    
    80% {
        transform: translateX(-10px);
    }

    100% { /* the end */
        opacity: 1;
        transform: translateX(0);
    }
}

.btn:link,
.btn:visited { /* selecting the btn class special estates link and visited */
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block; /* displays the element as a normal block, instead of inline */
    border-radius: 100px;
    transition: all .5s; /* all properties are enabled to be animated */
} /* con la transicion aca habilitamos para que se pueda animar, despues decimos 
como es la animacion en los distintos estados */

.btn:hover {
    transform: translateY(-3px); /* go 3px up on y-axis */
    box-shadow: 0 10px 20px rgba(0, 0, 0, .2);
}

.btn:active {
    transform: translateY(1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}